[{"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\index.tsx":"1","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\reportWebVitals.ts":"2","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\App.tsx":"3","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\RandomJoke\\RandomJoke.tsx":"4","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\RandomJokeReducer.ts":"5","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\api\\api.ts":"6","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\store.ts":"7","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\JokeCategories\\JokeCategories.tsx":"8","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\JokeCategoriesReducer.ts":"9","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\FreeTextSearching\\FreeTextSearching.tsx":"10","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\FreeTextSearchingReducer.ts":"11","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\index.tsx":"12","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\reportWebVitals.ts":"13","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\store.ts":"14","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\App.tsx":"15","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\RandomJokeReducer.ts":"16","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\JokeCategoriesReducer.ts":"17","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\FreeTextSearchingReducer.ts":"18","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\RandomJoke\\RandomJoke.tsx":"19","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\JokeCategories\\JokeCategories.tsx":"20","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\FreeTextSearching\\FreeTextSearching.tsx":"21","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\api\\api.ts":"22","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\saga\\RandomJokeSaga.ts":"23","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\saga\\index.ts":"24","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\saga\\FreeTextSearchingSaga.ts":"25","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\saga\\JokeCategoriesSaga.ts":"26","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\FreeTextSearching\\styled.ts":"27","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\PaginationPagesReducer.ts":"28","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\PaginationPages\\PaginationPages.tsx":"29","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\PaginationPages\\styled.ts":"30"},{"size":643,"mtime":1612196207384,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1612123297654,"results":"33","hashOfConfig":"32"},{"size":464,"mtime":1612380160016,"results":"34","hashOfConfig":"32"},{"size":678,"mtime":1612299907246,"results":"35","hashOfConfig":"32"},{"size":982,"mtime":1612199631939,"results":"36","hashOfConfig":"32"},{"size":1623,"mtime":1612470797350,"results":"37","hashOfConfig":"32"},{"size":671,"mtime":1612456267607,"results":"38","hashOfConfig":"32"},{"size":1404,"mtime":1612379183175,"results":"39","hashOfConfig":"32"},{"size":1813,"mtime":1612351558654,"results":"40","hashOfConfig":"32"},{"size":1245,"mtime":1612472644829,"results":"41","hashOfConfig":"32"},{"size":1205,"mtime":1612472563797,"results":"42","hashOfConfig":"32"},{"size":664,"mtime":1612545248935,"results":"43","hashOfConfig":"44"},{"size":440,"mtime":1612545248936,"results":"45","hashOfConfig":"44"},{"size":930,"mtime":1614011866389,"results":"46","hashOfConfig":"44"},{"size":590,"mtime":1613680373324,"results":"47","hashOfConfig":"44"},{"size":1768,"mtime":1613676187733,"results":"48","hashOfConfig":"44"},{"size":1975,"mtime":1613162605764,"results":"49","hashOfConfig":"44"},{"size":1531,"mtime":1613840043274,"results":"50","hashOfConfig":"44"},{"size":2318,"mtime":1613993426034,"results":"51","hashOfConfig":"44"},{"size":3200,"mtime":1613993425959,"results":"52","hashOfConfig":"44"},{"size":3712,"mtime":1614097739656,"results":"53","hashOfConfig":"44"},{"size":1596,"mtime":1613596689663,"results":"54","hashOfConfig":"44"},{"size":683,"mtime":1613330779310,"results":"55","hashOfConfig":"44"},{"size":473,"mtime":1613330680703,"results":"56","hashOfConfig":"44"},{"size":642,"mtime":1613162449934,"results":"57","hashOfConfig":"44"},{"size":965,"mtime":1613159659788,"results":"58","hashOfConfig":"44"},{"size":1829,"mtime":1613990943031,"results":"59","hashOfConfig":"44"},{"size":775,"mtime":1614011866418,"results":"60","hashOfConfig":"44"},{"size":2348,"mtime":1614097863369,"results":"61","hashOfConfig":"44"},{"size":180,"mtime":1614095532145,"results":"62","hashOfConfig":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1u1yv0w",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"5wcow7",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"91"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\index.tsx",[],["130","131"],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\reportWebVitals.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\App.tsx",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\RandomJoke\\RandomJoke.tsx",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\RandomJokeReducer.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\api\\api.ts",["132","133"],"import axios from \"axios\";\r\nimport {type} from \"os\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.chucknorris.io/jokes/',\r\n    withCredentials: true\r\n});\r\n\r\n\r\nexport const randomJokesAPI = {\r\n    getRandomJoke() {\r\n        return instance.get<RandomJokeResponseType>(`random`)\r\n            .then((res) => {\r\n                return res.data.value\r\n            })\r\n    },\r\n    getJokeCategories() {\r\n        return instance.get<CategoriesResponseType>(`categories`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    },\r\n    getJokeCategory(category: string) {\r\n        return instance.get<getJokeCategorieResponseType>(`random?category=${category}`)\r\n            .then((res) => {\r\n                return res.data.value\r\n            })\r\n    },\r\n    searchFreeText(text: string) {\r\n        const promise = instance.get<r[]>(`search?query=${text}`)\r\n        return promise\r\n    }\r\n};\r\n\r\n\r\ntype RandomJokeResponseType = {\r\n    \"categories\": [],\r\n    \"created_at\": string,\r\n    \"icon_url\": string,\r\n    \"id\": string,\r\n    \"updated_at\": string,\r\n    \"url\": string,\r\n    \"value\": string\r\n}\r\n\r\ntype CategoriesResponseType = {}\r\n\r\ntype getJokeCategorieResponseType = {\r\n    value: string\r\n}\r\n\r\ntype freeTextSearchingResponseType = {\r\n    config: {}\r\n    data: freeSearchingDataType\r\n    headers: {}\r\n    request: any\r\n    status: number\r\n    statusText: string\r\n}\r\n\r\n\r\ntype freeSearchingDataType = {\r\n    result: []\r\n    total: number\r\n}\r\n\r\ntype r = {\r\n    created_at: string\r\n    icon_url: string\r\n    id: string\r\n    updated_at: string\r\n    url: string\r\n    value: string\r\n}",["134","135"],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\store.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\JokeCategories\\JokeCategories.tsx",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\JokeCategoriesReducer.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\FreeTextSearching\\FreeTextSearching.tsx",["136","137"],"import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/store\";\r\nimport {setFreeEnteredTextTC} from \"../../Redux/FreeTextSearchingReducer\";\r\nimport {r} from \"../../api/api\";\r\n\r\n\r\ntype searchingResultType = {\r\n    created_at: string\r\n    icon_url: string\r\n    id: string\r\n    updated_at: string\r\n    url: string\r\n    value: string\r\n}\r\n\r\ntype searchingResultArrayType = Array<searchingResultType>\r\n\r\nexport function FreeTextSearching() {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const list = useSelector<AppRootStateType, any>(state => state.FreeTextSearchingReducer.jokesList)\r\n    console.log(list);\r\n\r\n\r\n    let [freeText, setFreeText] = useState('')\r\n\r\n    const w = (value: string) => {\r\n        setFreeText(value)\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        dispatch(setFreeEnteredTextTC(freeText))\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <input onChange={(e) => w(e.currentTarget.value)} type=\"text\"/>\r\n            <button onClick={submitHandler}>Enter some Text</button>\r\n            {/*{list.map((el: r) => {*/}\r\n            {/*   return <div>{el.value}</div>*/}\r\n            {/*})}*/}\r\n        </div>\r\n    );\r\n}","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\FreeTextSearchingReducer.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\index.tsx",[],["138","139"],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\reportWebVitals.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\store.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\App.tsx",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\RandomJokeReducer.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\JokeCategoriesReducer.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\FreeTextSearchingReducer.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\RandomJoke\\RandomJoke.tsx",["140","141"],"import React, {useEffect, useState} from 'react';\r\nimport './RandomJoke';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from \"../../Redux/store\";\r\nimport {setAsyncMainImageAC, setAsyncRandomJokeAC} from \"../../Redux/RandomJokeReducer\";\r\nimport styled from \"styled-components\"\r\nimport arrow from \"../../essets/img/arrowLeft.gif\"\r\n\r\nconst Main = styled.div`\r\ndisplay: flex;\r\nwidth: 1200px;\r\nheight: 200px;\r\nborder: 1px solid darkslateblue;\r\nbackground-color: darkslateblue;\r\ntext-align: center;\r\nbox-shadow: 1px 6px 36px 7px;\r\n`\r\nconst MainImage = styled.div`\r\nwidth: 50px;\r\nheight: 50px;\r\ndisplay: block;\r\nmargin: 0 auto;\r\n`\r\nconst RandomJokeButton = styled.button`\r\ntext-align: center;\r\nbackground-color: chocolate;\r\nborder-radius: 7px;\r\n:active, \r\n:focus {\r\n    outline: none;\r\n}\r\ncolor: aliceblue;\r\n`\r\nconst ContentWrap = styled.div`\r\nwidth: 150px;\r\nheight: 200px;\r\nposition: relative;\r\n`\r\nconst TextJokeWrap = styled.div`\r\nwidth: 1050px;\r\nheight: 200px;\r\nposition: relative;\r\n`\r\nconst TextJoke = styled.div`\r\nwidth: 1000px;\r\nheight: 20px;\r\ndisplay: table;\r\nposition: absolute;\r\nleft: 0;\r\nright: 0;\r\ntop: 0;\r\nbottom: 0;\r\nmargin: auto;\r\ncolor: aliceblue;\r\n`\r\nconst ImageButtonWrap = styled.div`\r\nwidth: 150px;\r\nheight: 75px;\r\nposition: absolute;\r\nleft: 0;\r\nright: 0;\r\ntop: 0;\r\nbottom: 0;\r\nmargin: auto;\r\n`\r\n\r\n\r\nexport function RandomJoke() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setAsyncMainImageAC())\r\n    }, [dispatch])\r\n\r\n\r\n    const setRandomJokeHandle = () => {\r\n        dispatch(setAsyncRandomJokeAC())\r\n    }\r\n\r\n    const joke = useSelector<AppRootStateType, any>(state => state.RandomJokeReducer.value)\r\n    const mainImage = useSelector<AppRootStateType, any>(state => state.RandomJokeReducer.mainImage)\r\n\r\n    return (\r\n        <Main>\r\n            <ContentWrap>\r\n                <ImageButtonWrap>\r\n                    <MainImage as='img' src={mainImage} alt=\"mainImage\"/>\r\n                    <RandomJokeButton onClick={setRandomJokeHandle}>Random Joke</RandomJokeButton>\r\n                </ImageButtonWrap>\r\n            </ContentWrap>\r\n            <TextJokeWrap>\r\n                <TextJoke>{joke ? joke : <><img src={arrow}/><div>Click the button</div></>}</TextJoke>\r\n            </TextJokeWrap>\r\n        </Main>\r\n    );\r\n}\r\n\r\n","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\JokeCategories\\JokeCategories.tsx",["142","143"],"import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/store\";\r\nimport {\r\n    setAsyncCategoryAC,\r\n    setAsyncJokeCategoriesAC,\r\n} from \"../../Redux/JokeCategoriesReducer\";\r\nimport styled from \"styled-components\"\r\nimport arrow from \"../../essets/img/arrowLeft (1) (1) (1).gif\";\r\n\r\n\r\nconst Main = styled.div`\r\ndisplay: flex;\r\nwidth:1200px;\r\nheight: 300px;\r\nmargin: 0 auto;\r\nbackground-color: darkslateblue;\r\nborder: 1px solid darkslateblue;\r\nbox-shadow: 1px 6px 36px 7px;\r\n`\r\nconst SelectButton = styled.div`\r\nwidth: 200px;\r\nheight: 300px;\r\nposition: relative;\r\n`\r\nconst SelectButtonWrap = styled.div`\r\nwidth: 200px;\r\nheight: 66px;\r\nposition: absolute;\r\nleft: 0;\r\nright: 0;\r\ntop: 0;\r\nbottom: 0;\r\nmargin: auto;\r\n`\r\nconst TextJokeWrap = styled.div`\r\nwidth: 1000px;\r\nposition: relative;\r\n`\r\nconst TextJoke = styled.div`\r\nwidth: 900px;\r\nheight: 20px;\r\ntext-align: center;\r\nposition: absolute;\r\nleft: 0;\r\nright: 0;\r\ntop: 0;\r\nbottom: 0;\r\nmargin: auto;\r\ncolor: aliceblue;\r\n`\r\nconst NewSelect = styled.select`\r\ndisplay: block;\r\nwidth: 100px;\r\nheight: 30px;\r\nfont-size: 17px;\r\nmargin: 0 auto;\r\nbackground-color: aliceblue;\r\nborder-radius: 10px;\r\n:active, \r\n:focus {\r\n    outline: none;\r\n`\r\nconst NewButton = styled.button`\r\nborder-radius: 10px;\r\nbackground-color: chocolate;\r\ncolor: aliceblue;\r\n:active, \r\n:focus {\r\n    outline: none;\r\n}\r\n`\r\n\r\nexport function JokeCategories() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setAsyncJokeCategoriesAC())\r\n    }, [dispatch])\r\n\r\n    let [currentCat, setCurrentCat] = useState('')\r\n\r\n    const jokeCategories = useSelector<AppRootStateType, any>(state =>\r\n        state.JokeCategoriesReducer.categories)\r\n\r\n    const jokeAccordingToCat = useSelector<AppRootStateType, any>(state => state.JokeCategoriesReducer.value)\r\n\r\n    const getCurrentCategory = (c: ChangeEvent<HTMLSelectElement>) => {\r\n\r\n        dispatch(setAsyncCategoryAC(c.target.value))\r\n        setCurrentCat(c.target.value)\r\n    }\r\n\r\n    const changeJokeOfCategory = () => {\r\n        if (currentCat == '') {\r\n            dispatch(setAsyncCategoryAC(currentCat = jokeCategories[0]))\r\n            // setCurrentCat(currentCat = jokeCategories[0])\r\n        } else {\r\n            dispatch(setAsyncCategoryAC(currentCat))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Main className=\"App\">\r\n            <SelectButton>\r\n                <SelectButtonWrap>\r\n                    <NewSelect onChange={getCurrentCategory}>\r\n                        {jokeCategories.map((c: any, index: number) => {\r\n                            return <option value={c} key={index}>{c}</option>\r\n                        })}\r\n                    </NewSelect>\r\n                    <NewButton onClick={changeJokeOfCategory}>Enjoy by other jokes of this category</NewButton>\r\n                </SelectButtonWrap>\r\n            </SelectButton>\r\n            <TextJokeWrap>\r\n                <TextJoke>{jokeAccordingToCat ? jokeAccordingToCat : <><img src={arrow}/>\r\n                    <div>Choose the category</div>\r\n                </>}</TextJoke>\r\n            </TextJokeWrap>\r\n        </Main>\r\n    );\r\n}\r\n\r\n","D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\FreeTextSearching\\FreeTextSearching.tsx",["144","145"],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\api\\api.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\saga\\RandomJokeSaga.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\saga\\index.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\saga\\FreeTextSearchingSaga.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\saga\\JokeCategoriesSaga.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\FreeTextSearching\\styled.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Redux\\PaginationPagesReducer.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\PaginationPages\\PaginationPages.tsx",["146"],"D:\\stady\\js\\React\\ChuckNorrisJokes_saga\\src\\Conponents\\PaginationPages\\styled.ts",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":2,"column":9,"nodeType":"153","messageId":"154","endLine":2,"endColumn":13},{"ruleId":"151","severity":1,"message":"155","line":51,"column":6,"nodeType":"153","messageId":"154","endLine":51,"endColumn":35},{"ruleId":"147","replacedBy":"156"},{"ruleId":"149","replacedBy":"157"},{"ruleId":"151","severity":1,"message":"158","line":5,"column":9,"nodeType":"153","messageId":"154","endLine":5,"endColumn":10},{"ruleId":"151","severity":1,"message":"159","line":17,"column":6,"nodeType":"153","messageId":"154","endLine":17,"endColumn":30},{"ruleId":"147","replacedBy":"160"},{"ruleId":"149","replacedBy":"161"},{"ruleId":"151","severity":1,"message":"162","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":35},{"ruleId":"163","severity":1,"message":"164","line":92,"column":44,"nodeType":"165","endLine":92,"endColumn":62},{"ruleId":"166","severity":1,"message":"167","line":96,"column":24,"nodeType":"168","messageId":"169","endLine":96,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":117,"column":72,"nodeType":"165","endLine":117,"endColumn":90},{"ruleId":"170","severity":1,"message":"171","line":80,"column":57,"nodeType":"172","messageId":"173","endLine":80,"endColumn":59},{"ruleId":"163","severity":1,"message":"164","line":93,"column":25,"nodeType":"165","endLine":93,"endColumn":43},{"ruleId":"170","severity":1,"message":"171","line":56,"column":35,"nodeType":"172","messageId":"173","endLine":56,"endColumn":37},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","'freeTextSearchingResponseType' is defined but never used.",["174"],["175"],"'r' is defined but never used.","'searchingResultArrayType' is defined but never used.",["174"],["175"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]