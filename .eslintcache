[{"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\index.tsx":"1","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\reportWebVitals.ts":"2","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\App.tsx":"3","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\RandomJoke\\RandomJoke.tsx":"4","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\RandomJokeReducer.ts":"5","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\api\\api.ts":"6","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\store.ts":"7","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\JokeCategories\\JokeCategories.tsx":"8","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\JokeCategoriesReducer.ts":"9","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\FreeTextSearching\\FreeTextSearching.tsx":"10","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\FreeTextSearchingReducer.ts":"11"},{"size":643,"mtime":1612196207384,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1612123297654,"results":"14","hashOfConfig":"13"},{"size":464,"mtime":1612380160016,"results":"15","hashOfConfig":"13"},{"size":678,"mtime":1612299907246,"results":"16","hashOfConfig":"13"},{"size":982,"mtime":1612199631939,"results":"17","hashOfConfig":"13"},{"size":1623,"mtime":1612470797350,"results":"18","hashOfConfig":"13"},{"size":671,"mtime":1612456267607,"results":"19","hashOfConfig":"13"},{"size":1404,"mtime":1612379183175,"results":"20","hashOfConfig":"13"},{"size":1813,"mtime":1612351558654,"results":"21","hashOfConfig":"13"},{"size":1245,"mtime":1612472644829,"results":"22","hashOfConfig":"13"},{"size":1205,"mtime":1612472563797,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1u1yv0w",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\index.tsx",[],["50","51"],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\reportWebVitals.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\App.tsx",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\RandomJoke\\RandomJoke.tsx",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\RandomJokeReducer.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\api\\api.ts",["52","53"],"import axios from \"axios\";\r\nimport {type} from \"os\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.chucknorris.io/jokes/',\r\n    withCredentials: true\r\n});\r\n\r\n\r\nexport const randomJokesAPI = {\r\n    getRandomJoke() {\r\n        return instance.get<RandomJokeResponseType>(`random`)\r\n            .then((res) => {\r\n                return res.data.value\r\n            })\r\n    },\r\n    getJokeCategories() {\r\n        return instance.get<CategoriesResponseType>(`categories`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    },\r\n    getJokeCategory(category: string) {\r\n        return instance.get<getJokeCategorieResponseType>(`random?category=${category}`)\r\n            .then((res) => {\r\n                return res.data.value\r\n            })\r\n    },\r\n    searchFreeText(text: string) {\r\n        const promise = instance.get<r[]>(`search?query=${text}`)\r\n        return promise\r\n    }\r\n};\r\n\r\n\r\ntype RandomJokeResponseType = {\r\n    \"categories\": [],\r\n    \"created_at\": string,\r\n    \"icon_url\": string,\r\n    \"id\": string,\r\n    \"updated_at\": string,\r\n    \"url\": string,\r\n    \"value\": string\r\n}\r\n\r\ntype CategoriesResponseType = {}\r\n\r\ntype getJokeCategorieResponseType = {\r\n    value: string\r\n}\r\n\r\ntype freeTextSearchingResponseType = {\r\n    config: {}\r\n    data: freeSearchingDataType\r\n    headers: {}\r\n    request: any\r\n    status: number\r\n    statusText: string\r\n}\r\n\r\n\r\ntype freeSearchingDataType = {\r\n    result: []\r\n    total: number\r\n}\r\n\r\ntype r = {\r\n    created_at: string\r\n    icon_url: string\r\n    id: string\r\n    updated_at: string\r\n    url: string\r\n    value: string\r\n}",["54","55"],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\store.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\JokeCategories\\JokeCategories.tsx",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\JokeCategoriesReducer.ts",[],"D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Conponents\\FreeTextSearching\\FreeTextSearching.tsx",["56","57"],"import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/store\";\r\nimport {setFreeEnteredTextTC} from \"../../Redux/FreeTextSearchingReducer\";\r\nimport {r} from \"../../api/api\";\r\n\r\n\r\ntype searchingResultType = {\r\n    created_at: string\r\n    icon_url: string\r\n    id: string\r\n    updated_at: string\r\n    url: string\r\n    value: string\r\n}\r\n\r\ntype searchingResultArrayType = Array<searchingResultType>\r\n\r\nexport function FreeTextSearching() {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const list = useSelector<AppRootStateType, any>(state => state.FreeTextSearchingReducer.jokesList)\r\n    console.log(list);\r\n\r\n\r\n    let [freeText, setFreeText] = useState('')\r\n\r\n    const w = (value: string) => {\r\n        setFreeText(value)\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        dispatch(setFreeEnteredTextTC(freeText))\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <input onChange={(e) => w(e.currentTarget.value)} type=\"text\"/>\r\n            <button onClick={submitHandler}>Enter some Text</button>\r\n            {/*{list.map((el: r) => {*/}\r\n            {/*   return <div>{el.value}</div>*/}\r\n            {/*})}*/}\r\n        </div>\r\n    );\r\n}","D:\\stady\\js\\React\\ChuckNorrisJokes\\src\\Redux\\FreeTextSearchingReducer.ts",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":9,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":51,"column":6,"nodeType":"64","messageId":"65","endLine":51,"endColumn":35},{"ruleId":"58","replacedBy":"67"},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","severity":1,"message":"69","line":5,"column":9,"nodeType":"64","messageId":"65","endLine":5,"endColumn":10},{"ruleId":"62","severity":1,"message":"70","line":17,"column":6,"nodeType":"64","messageId":"65","endLine":17,"endColumn":30},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","'freeTextSearchingResponseType' is defined but never used.",["71"],["72"],"'r' is defined but never used.","'searchingResultArrayType' is defined but never used.","no-global-assign","no-unsafe-negation"]